@model IEnumerable<USOS.Models.NewsView>

@{
    ViewData["Title"] = "News";
    var modalID = "Admin";
    var areaModalID = "Admin-label";
}

<h2>News</h2>
@if (User.IsInRole("Admin"))
{
    <p>
        <a id="createLine" data-toggle="modal" asp-action="CreateNews" data-target="#@modalID" class="btn btn-primary">Create New</a>
    </p>
}
<table class="table">

    @foreach (var item in Model)
    {
    
        <div class="container-fluid" >
 
            <div class="p-3 mb-2 bg-warning text-dark" style="background-color:#f7f7f7;padding: 10px;margin: 10px;border-left: 10px ridge rgb(27, 245, 233, .6);border-radius: 6px;box-shadow:0 2px 1px rgba(0, 0, 0, 0.2),inset 0 2px 1px rgba(0, 0, 0, 0.2);">

                <h4>  @Html.DisplayFor(modelItem => item.Header) </h4>
                <h6>  @item.Date.ToString("yyyy-MM-dd")</h6>
                <h5>
                    @Html.DisplayFor(modelItem => item.Text)<strong></strong>
                    @if (User.IsInRole("Admin"))
                    {
                        <p>
                            @Html.ActionLink("Edit", "EditNews", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                            <a id="createLine" data-toggle="modal" asp-action="EditNews" asp-route-id="@item.ID" data-target="#@modalID" class="btn btn-primary">Edit</a>
                        </p>
                    }
                </h5>


            </div>
        </div>
   

    }

    </tbody>
</table>

@await Html.PartialAsync("_Modal", new Modal
{
    //UserName = ""
    ID = modalID,
    AreaLabelID = areaModalID,
    Size = ModalSize.Medium
})

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_ModalScriptsInit", modalID);}

}

