@model IEnumerable<USOS.Models.NewsView>

@{
    ViewData["Title"] = "News";
    var modalID = "Admin";
    var areaModalID = "Admin-label";
}

<h2>News</h2>
@if (User.IsInRole("Admin"))
{
    <p>
        <a id="createLine" data-toggle="modal" asp-action="CreateNews" data-target="#@modalID" class="btn btn-primary">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Header)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Header)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "EditNews", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        <a id="createLine" data-toggle="modal" asp-action="EditNews" asp-route-id="@item.ID" data-target="#@modalID" class="btn btn-primary">Edit</a>
                    </td>
                }
            </tr>
        }
        @foreach (var item in Model)
        {
            <div class="container-fluid">
                
                        <h4>
                            @Html.DisplayFor(modelItem => item.Header)
                            @item.Date.ToString("yyyy-MM-dd")
                        </h4>
                        <p>
                            @Html.DisplayFor(modelItem => item.Text)<strong>

                            </strong>    @Html.ActionLink("Edit", "EditNews", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                            <a id="createLine" data-toggle="modal" asp-action="EditNews" asp-route-id="@item.ID" data-target="#@modalID" class="btn btn-primary">Edit</a>
                        </p>
                 
         
             </div>

                }

        </tbody>
</table>

@await Html.PartialAsync("_Modal", new Modal
{
    //UserName = ""
    ID = modalID,
    AreaLabelID = areaModalID,
    Size = ModalSize.Medium
})

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_ModalScriptsInit", modalID);}

}

